# Generated by Django 5.1.7 on 2025-05-02 17:46

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('name', models.CharField(choices=[('Shebin El-Kom', 'Shebin El-Kom'), ('Menouf', 'Menouf'), ('Tookh Tanbesha', 'Tookh Tanbesha'), ('Quesna', 'Quesna'), ('Berket El-Sabaa', 'Berket El-Sabaa'), ('Ashan', 'Ashan'), ('Shibra Balloula', 'Shibra Balloula'), ('Sadat City', 'Sadat City'), ('Nasr City', 'Nasr City'), ('Heliopolis', 'Heliopolis'), ('Maadi', 'Maadi'), ('Zamalek', 'Zamalek'), ('Downtown', 'Downtown'), ('New Cairo', 'New Cairo'), ('Mokattam', 'Mokattam'), ('Sheraton', 'Sheraton'), ('Garden City', 'Garden City'), ('Abbasia', 'Abbasia'), ('Smouha', 'Smouha'), ('Miami', 'Miami'), ('Roushdy', 'Roushdy'), ('Gleem', 'Gleem'), ('Stanley', 'Stanley'), ('Louran', 'Louran'), ('Al Mansheya', 'Al Mansheya'), ('Bolkly', 'Bolkly'), ('Dokki', 'Dokki'), ('Mohandeseen', 'Mohandeseen'), ('Agouza', 'Agouza'), ('Haram', 'Haram'), ('Faysal', 'Faysal'), ('October', 'October'), ('Sheikh Zayed', 'Sheikh Zayed'), ('Imbaba', 'Imbaba'), ('Not Specified', 'Not Specified')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('username', models.CharField(blank=True, max_length=254, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=254, null=True, unique=True, verbose_name='phone')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('not_specified', 'not_specified')], default='not_specified', max_length=50)),
                ('role', models.CharField(choices=[('admin', 'admin'), ('patient', 'patient'), ('doctor', 'doctor')], default='patient', max_length=50)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='super status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.city')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('code', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
